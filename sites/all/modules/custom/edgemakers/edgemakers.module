<?php
/**
 * Implements hook_views_api().
 */
function edgemakers_views_api() {
  return array(
    'api' => 3,
  );
}
/**
 * Implements hook_menu().
 */
function edgemakers_menu() {
  $items['admin/edgemakers'] = array(
    'title' => 'Edgemakers',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer edgemakers'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  $items['forbidden'] = array(
    'title' => 'Access Denied',
    'page callback' => 'edgemakers_forbidden_page',
    'access callback' => true,
    'file' => 'edgemakers.pages.inc',
  );
  /*$items['notfound'] = array(
    'title' => 'Page Not Found',
    'page callback' => 'edgemakers_notfound_page',
    'access callback' => true,
    'file' => 'edgemakers.pages.inc',
  );*/
  return $items;
}
/**
* Implements hook_views_post_render().
*/
function edgemakers_views_post_render(&$view, &$output, &$cache) {
  if ($view->name == 'community_users') {
    $output = str_replace('viewallusers', 'javascript:viewallusers();', $output);
    $output .= "<script>if(typeof viewallChange != 'undefined') setTimeout(viewallChange, 1);</script>";
  }
}
/**
* Implements hook_block_info().
*/
function edgemakers_block_info() {
  $blocks['community_activity'] = array(
    'info' => t('Community Activity'),
    'status' => TRUE,
    'region' => 'community',
    'weight' => 5,
    'visibility' => 1,
  );
  return $blocks;
}
/**
* Implements hook_block_configure().
*/
function edgemakers_block_configure($delta) {
  $form = array();
  switch($delta) {
    case 'community_activity':
      $types = node_type_get_types();
      $content_type_options = array();
      foreach ($types as $type) {
        $content_type_options[$type->type] = $type->name;
      }
      
      $form['edgemakers_community_content_type'] = array(
        '#type' => 'checkboxes',
        '#title' => t('Content types that will display for Community Page'),
        '#default_value' => variable_get('edgemakers_community_content_type', array()),
        '#description' => t('Set content types for community page.'),
        '#options' => $content_type_options,
      );

      $form['edgemakers_community_comment_type'] = array(
        '#type' => 'checkboxes',
        '#title' => t('Comment Types that will display for Community Page.'),
        '#default_value' => variable_get('edgemakers_community_comment_type', array()),
        '#description' => t('Set comment types for community page.'),
        '#options' => $content_type_options,
      );
      
      $form['edgemakers_community_activity_num'] = array(
        '#type' => 'select',
        '#title' => t('Activity Num that will display for Community Page.'),
        '#default_value' => variable_get('edgemakers_community_activity_num', 5),
        '#description' => t('Set Activity Num for community page.'),
        '#options' => range(0, 50),
      );
      break;
  }
  return $form;
}
/**
 * Implements hook_form_alter().
 *
}*/
function edgemakers_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'bg_image_ui_paths_form') {
    $form['description']['#suffix'] = '<p>'.l(t('Upload a new background image'), 'node/add/site-bg-image', array('query' => drupal_get_destination())).'</p>';
  }
}
/**
* Implements hook_block_save().
*/
function edgemakers_block_save($delta = '', $edit = array()) {
  switch($delta) {
    case 'community_activity':
      variable_set('edgemakers_community_content_type', $edit['edgemakers_community_content_type']);
      variable_set('edgemakers_community_comment_type', $edit['edgemakers_community_comment_type']);
      variable_set('edgemakers_community_activity_num', $edit['edgemakers_community_activity_num']);
      break;
  }
  return;
}
/**
* Implements hook_block_view().
*/
function edgemakers_block_view($delta = '') {
  require_once drupal_get_path('module', 'edgemakers').'/edgemakers.pages.inc';
  switch ($delta) {
    case 'community_activity':
      $contents = edgemakers_community_contents();
      $block['subject'] = t('Community Activity Stream');
      $block['content'] = array(
        '#theme' => 'community_activity_block',
        '#contents' => $contents,
        '#num' => variable_get('edgemakers_community_activity_num', 5),
      );
      return $block;
      break;
  }
}
/**
* Implements hook_permission().
*/
function edgemakers_permission() {
  $perms = array(
    'administer edgemakers' => array(
      'title' => t('Administer Edgemakers'),
    ),
  );
  return $perms;
}
/**
 * Implements hook_theme().
 */
function edgemakers_theme() {
  return array(
    'community_activity_block' => array(
      'variables' => array('contents' => NULL, 'num' => 0),
    ),
  );
}
/**
 * Implements hook_image_default_styles().
 */
function edgemakers_image_default_styles() {
  $styles = array();

  $styles['edgemakers_avatar'] = array(
    'effects' => array(
      array(
        'name' => 'image_scale',
        'data' => array('width' => 74, 'height' => 74, 'upscale' => 1),
        'weight' => 0,
      ),
    )
  );

  return $styles;
}
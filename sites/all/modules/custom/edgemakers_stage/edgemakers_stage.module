<?php
/**
 * @file
 * This module creates a Views Slideshow Xtra content type and
 * example slide nodes.
 */

/**
 * Implements hook_init().
 */
function edgemakers_stage_init () {
  //drupal_add_css(drupal_get_path("module", "tt")."/tt.css");
}

/**
 * Implements hook_menu().
 */
function edgemakers_stage_menu() {

  $items = array();

  // Module settings.
  $items['admin/config/system/ftesettings/edgemakers'] = array(
    'title' => 'Edgemakers Stage',
    'description' => 'settings for Stage',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('edgemakers_stage_settings'),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'edgemakers_stage') ,
  );

  // Remove set from stage.
  $items['admin/edgemakers/stage/setindex/ajaxdelete/%'] = array(
    'title' => 'Delete Set',
    'page callback' => 'edgemakers_set_index_delete_action',
    'page arguments' => array(5, 6, 7),
    'access arguments' => array('access content'),
    'file path' => drupal_get_path('module', 'node'),
    'file' => 'node.pages.inc',
  );

  // Page tab menu
  $items['admin/edgemakers/stage'] = array(
    'title' => 'Manage Stage',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'edgemakers_stage_page',
    'access arguments' => array('access content'),
    'file' => 'stage.pages.inc',
    'file path' => drupal_get_path('module', 'edgemakers_stage') ,
  );

  $items['admin/edgemakers/stage/list'] = array(
    'title' => 'Manage stage',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'page callback' => 'edgemakers_stage_page',
    'access arguments' => array('access content'),
    'file' => 'stage.pages.inc',
    'file path' => drupal_get_path('module', 'edgemakers_stage') ,
  );

  $items['admin/edgemakers/stage/create'] = array(
    'title' => 'Create Stage',
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'edgemakers_stage_create_page',
    'access arguments' => array('access content'),
    'file' => 'stage.manage.inc',
    'file path' => drupal_get_path('module', 'edgemakers_stage') ,
  );

  $items['admin/edgemakers/stage/managebox'] = array(
    'title' => 'Manage Box',
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'edgemakers_stage_managebox_page',
    'page arguments' => array(4),
    'access arguments' => array('access content'),
    'file' => 'stage.pages.inc',
    'file path' => drupal_get_path('module', 'edgemakers_stage') ,
  );
  //End tab menu

  // API URL
  // Remove set from stage.
  $items['edgemakers/stage/api/list'] = array(
    'title' => 'Delete Set',
    'page callback' => 'edgemakers_stage_api_list_json',
    'access arguments' => array('access content'),
    'file path' => drupal_get_path('module', 'edgemakers_stage'),
    'file' => 'stage.api.inc',
  );


  return $items;

}

/**
 * Implements hook_theme().
 */
function edgemakers_stage_theme() {
  return array(
    'edgemakers_stage_set_list_form' => array(
      'render element' => 'form',
    ),
  );
}

/**
 * Implements hook_foo().
 *
 * Displays help and module information.
 */
function edgemakers_stage_help($path, $arg) {
  switch ($path) {
    case "admin/help#stage":
      $help_test = '<p>' . t("Admin stage of set.") . '</p>';

      return $help_test;

      break;
  }
}

/**
 * Remove set from stage.
 *
 * @param int $stage_id
 * @param int $set_id
 */
function edgemakers_set_index_delete_action($stage_id = '', $set_id) {

  $callbak_url = $_GET[q];

  $destination = explode("&destination=", $callbak_url);

  watchdog('Debug', 'Destination: ' . $destination[1] . ' AND args: ' . print_r($destination, TRUE));

  $stage = node_load($stage_id);

  if (isset($stage->box_index_data[LANGUAGE_NONE])) {
    $stage_index = unserialize($stage->box_index_data[LANGUAGE_NONE][0]['value']);

    foreach ($stage_index AS $key=>$index) {
      if ($index['set_id'] == $set_id) {
        unset($stage_index[$key]);
      }
    }

    // Update index data in stage.
    $stage->box_index_data[$stage->language][0]['value'] = serialize($stage_index);

    node_submit($stage);
    $save_status = node_save($stage);

    _edgemakers_stage_box_index_list_update($stage_id, $destination[1]);

  }

}

/*function _add_set_to_stage_ajax($form, &$form_state) {

  $tableitem = $form_state['values']['set_title'];
  $datas = $form_state['values'];

  if (!in_array($tableitem, $_SESSION['lists'][$datas->stage_id])) {
    $_SESSION['lists'][$datas->stage_id][] = array(
      'nid' => $form_state['values']['set_title'],
      'title' => $form_state['values']['set_title'],
      'type' => $form_state['values']['set_types'],
      'location' => $form_state['values']['set_location_index'],
    );
  }

  //for ($i = 1; $i < $form_state['num_names']; $i++) {

  $header = array(
    'title' => array('data' => t('Set Title')),
    'type' => array('data' => t('Set Type')),
    'location' => array('data' => t('Set Location')),
    'operations' => t('DELETE'),
  );
  foreach ($_SESSION['lists'][$datas->stage_id] AS $set) {

    if ($set['nid']) {
  //drupal_set_message('<pre>' . print_r($set, TRUE) . '</pre>');
      $form['set_list']['set_list_table']['set_nid_' . $set['nid']] = array(
        '#type' => 'textfield',
        '#title' => t('SEt ' . $key),
        '#value' => $set['nid'],
        //'#prefix' => '<div style="float: left;">',
        //'#suffix' => '</div>',
      );
      $form['set_list']['set_list_table']['set_type_' . $set['nid']] = array(
        '#type' => 'textfield',
        '#title' => t('Type ' . $key),
        '#value' => $set['type'],
        //'#prefix' => '<div style="float: left;">',
        //'#suffix' => '</div>',
      );
      $form['set_list']['set_list_table']['set_location_' . $set['nid']] = array(
        '#type' => 'textfield',
        '#title' => t('Box location index ' . $key),
        '#value' => $set['location'],
        //'#prefix' => '<div style="float: left;">',
        //'#suffix' => '</div>',
      );
    }

  }
  //unset($_SESSION['lists']);
  //unset($_SESSION['lists'][$datas->stage_id][]);
  return $form['set_list']['set_list_table'];
}*/

/**
 * Implements hook_form_alter().
 */
function edgemakers_stage_form_alter(&$form, $form_state, $form_id) {
  $type = str_replace("-", "_" ,variable_get('edgemakers_stage_content_type', 'stage'));
  $stage_form_id = $type . '_node_form';

  //drupal_set_message($stage_form_id);
  //$stage_delete_form_id = $type . 'node_delete_confirm';

  if ($form_id == $stage_form_id) {

    if ((arg(1) == 'edgemakers' && arg(2) == 'stage')
      || (arg(0) == 'modal')
    ) {

      $form['actions']['submit']['#submit'][] = '_edgemakers_stage_node_submit_redirect_handler';
      $form['#redirect'] = 'admin/edgemakers/set';

      unset($form['actions']['preview']);
      unset($form['actions']['delete']);
      unset($form['box_index_data']);

    }
  }
}

/**
 * handler form submit.
 */
function _edgemakers_stage_node_submit_redirect_handler($form, &$form_state) {
  unset($_REQUEST['destination']);
  unset($form['#redirect']);
  //$node = $form_state['node'];
  //if (!isset($node->nid)) {
  $form_state['redirect'] = 'admin/edgemakers/stage';
  //}
}

/**
 * Update setes list in stage.
 *
 * @param int $stage_id
 */
function _edgemakers_stage_box_index_list_update($stage_id = '', $destination = '') {
  $output = _edgemakers_stage_mangebox_index_list_html($stage_id, $destination);
  $commands = array();
  $commands[] = ajax_command_replace('#stage_manage_box_index_list', '<div id="stage_manage_box_index_list">' . $output . '</div>');
  $page = array('#type' => 'ajax', '#commands' => $commands);
  ajax_deliver($page);
}

/**
 * Build form html from hook_form().
 * @param int $stage_id
 * @return Ambigous <The, void, string, A, boolean>
 */
function _edgemakers_stage_mangebox_index_list_html($stage_id, $destination = '') {
  module_load_include('inc', 'edgemakers_stage', 'stage.pages');
  $form = drupal_get_form('edgemakers_stage_set_list_form', $stage_id);
  $form['#action'] = url($destination);
  //$form['action'] = drupal_get_destination();
  //if ($stage_id) {
    return drupal_render($form);
  //}
  //else {
  //  return '';
  //}
}
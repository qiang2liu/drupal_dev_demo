<?php
/**
 * Implements hook_views_api().
 */
function edgemakers_user_views_api() {
  return array(
    'api' => 3,
  );
}
/**
 * Implements hook_menu().
 */
function edgemakers_user_menu() {
  $items['edgemakers/user/profile/ajax/%user'] = array(
    'page callback' => 'edgemakers_user_profile_view', // Render HTML
    'page arguments' => array(4),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'edgemakers_user.pages.inc',
  );
  $items['edgemakers/user/profile/settings/%ctools_js'] = array(
    'page callback' => 'user_profile_callback',
    'page arguments' => array(4),
    'access callback' => 'user_is_logged_in',
    'file' => 'edgemakers_user.pages.inc',
    'type' => MENU_CALLBACK,
  );
  return $items;
}
/**
 * Implements hook_form_alter().
 */
function edgemakers_user_form_alter(&$form, &$form_state, $form_id) {
  if(arg(0) == 'modal_forms' 
    && ($form_id == 'user_register_form' || $form_id == 'user_login' || $form_id == 'user_pass')
    && variable_get('modal_forms_login_links', 0) == 3) {
    $items = array();
    if (variable_get('user_register', USER_REGISTER_VISITORS_ADMINISTRATIVE_APPROVAL)) {
      $items[] = array('data'=>ctools_modal_text_button(t('Create new account'), 'modal_forms/nojs/register', t('Create a new user account'), 'ctools-modal-modal-popup-medium'.($form_id == 'user_register_form' ? ' active':'')), 'class'=>array('user_register_form'));
    }
    $items[] = array('data'=>ctools_modal_text_button(t('Log in'), 'modal_forms/nojs/login', t('Log in.'), 'ctools-modal-modal-popup-small'.($form_id == 'user_login' ? ' active':'')), 'class'=>array('user_login'));
    $items[] = array('data'=>ctools_modal_text_button(t('Request new password'), 'modal_forms/nojs/password', t('Request new password via e-mail.'), 'ctools-modal-modal-popup-small'.($form_id == 'user_pass' ? ' active':'')), 'class'=>array('user_pass'));
    $form_state['title'] = theme('item_list', array('items' => $items));
  }
  switch ($form_id) {
    case 'modal_forms_admin_settings':
      $form['modal_forms_login_settings']['modal_forms_login_links']['#options'][3] = t('Show links above and open them in a modal');
      break;
    case 'user_register_form':
      //if (arg(0) == 'modal_forms') {
        unset($form['account']['name']['#description'], $form['account']['mail']['#description'], $form['account']['pass']['#description'], $form['field_profile_picture'][LANGUAGE_NONE][0]['#description'], $form['field_firstname'][LANGUAGE_NONE][0]['value']['#description'], $form['field_lastname'][LANGUAGE_NONE][0]['value']['#description']);
        $form['account']['name']['#attributes']['placeholder'] = t('USER NAME');
        $form['account']['mail']['#attributes']['placeholder'] = t('EMAIL');
        $form['account']['mail']['#weight'] = -11;
        $form['field_firstname'][LANGUAGE_NONE][0]['value']['#attributes']['placeholder'] = t('FIRST NAME');
        $form['field_lastname'][LANGUAGE_NONE][0]['value']['#attributes']['placeholder'] = t('LAST NAME');
        $form['actions']['submit']['#value'] = t('Continue');
        $element_info = element_info('password_confirm');
        $process = $element_info['#process'];
        // Add our process function to the array:
        $process[] = 'edgemakers_user_process_password_confirm';
        $form['account']['pass']['#process'] = $process;
        $form['#validate'][] = '_edgemakers_user_register_form_validate';
      //}
      break;
    case 'user_login':
      if (arg(0) == 'modal_forms') {
        unset($form['name']['#description'], $form['pass']['#description']);
        $form['name']['#attributes']['placeholder'] = t('USER NAME');
        $form['pass']['#attributes']['placeholder'] = t('PASSWORD');
        $form['actions']['submit']['#value'] = t('Log in');
      }
      break;
    case 'user_pass':
      if (arg(0) == 'modal_forms') {
        unset($form['name']['#description']);
        $form['name']['#attributes']['placeholder'] = t('USER NAME OR EMAIL');
        $form['actions']['submit']['#value'] = t('Email New Password');
      }
      break;
  }
}
function _edgemakers_user_register_form_validate($form, &$form_state) {
  require_once drupal_get_path('module', 'edgemakers_user').'/edgemakers_user.pages.inc';
  _edgemakers_user_editform_validate($form, $form_state);
}
function edgemakers_user_process_password_confirm($element) {
  $element['pass1']['#attributes']['placeholder'] = t('PASSWORD');
  $element['pass2']['#attributes']['placeholder'] = t('CONFIRM PASSWORD');
  return $element;
}
/**
 * Implements hook_entity_presave().
 */
function edgemakers_user_entity_presave($account, $type) {
  // Only handle new users that have an uploaded picture.
  // user_save() will handle old users.
  if(!isset($account->field_profile_picture)) return;
  $fid = $account->field_profile_picture[LANGUAGE_NONE][0]['fid'];
  if ($type !== 'user' || !$account->is_new || !$fid)  return;
  $picture = file_load($fid);
  $info = image_get_info($picture->uri);
  $picture_directory =  file_default_scheme() . '://' . variable_get('user_picture_path', 'pictures');

  // Set the new uid since it is typically not set at this point. user_save()
  // will use this uid if set so no problems setting it early here.
  if (empty($account->uid)) {
    $account->uid = db_next_id(db_query('SELECT MAX(uid) FROM {users}')->fetchField());
  }

  // Prepare the pictures directory.
  file_prepare_directory($picture_directory, FILE_CREATE_DIRECTORY);
  $destination = file_stream_wrapper_uri_normalize($picture_directory . '/picture-' . $account->uid . '-' . REQUEST_TIME . '.' . $info['extension']);

  // Move the temporary file into the final location.
  if ($picture = file_move($picture, $destination, FILE_EXISTS_RENAME)) {
    $picture->status = FILE_STATUS_PERMANENT;
    $account->picture = file_save($picture);
    file_usage_add($picture, 'user', 'user', $account->uid);
  }
  // Update user record with picture fid.
  if (isset($account->picture->fid)) {
    $account->picture = $account->picture->fid;
  }
}

function get_user_avatar($account) {
  if(!isset($account->field_profile_picture)) return;
  $fid = $account->field_profile_picture[LANGUAGE_NONE][0]['fid'];
  $picture = file_load($fid);
  if (!($account->picture)) {
    user_save($account,array('picture'=>$picture));
  }
  return $picture;
}
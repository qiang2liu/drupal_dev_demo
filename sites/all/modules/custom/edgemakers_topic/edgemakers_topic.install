<?php
require_once 'edgemakers_topic.features.field_base.inc';
require_once 'edgemakers_topic.features.field_instance.inc';
/**
 * @file
 * Install file for edgemakers topic module.
 */
/**
 * Implements hook_install().
 * - Add the body field.
 * - Configure the body field.
 * - Create the company name field.
 */
function edgemakers_topic_install() {
	$nodetype = 'edgemakers_topic';
	//node creation
  $types = node_type_get_types();
  if(array_key_exists($nodetype, $types)) {
    return;
  }
  $t = get_t();
  // Define and save the slide node type.
  $topic_node_type = array(
    'type' => $nodetype,
    'custom' => 1,
    'name' => $t('Topic'),
    'base' => 'node_content',
    'description' => $t('Node type used for topics.'),
  );
  $topic_node_type = node_type_set_defaults($topic_node_type);
  node_type_save($topic_node_type);
  node_add_body_field($topic_node_type, $t('The Problem'));

  // Create all the fields we are adding to our content type.
  foreach (edgemakers_topic_field_default_field_bases() as $field) {
    field_create_field($field);
  }
  // Create all the instances for our fields.
  foreach (edgemakers_topic_field_default_field_instances() as $instance) {
    $instance['entity_type'] = 'node';
    $instance['bundle'] = 'edgemakers_topic';
    field_create_instance($instance);
  }
}
/**
 * Implements hook_uninstall().
 */
function edgemakers_topic_uninstall() {
  // Gather all the example content that might have been created while this
  // module was enabled.
  $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
  $result = db_query($sql, array(':type' => 'edgemakers_topic'));
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }
  // Delete all the nodes at once
  node_delete_multiple($nids);
  // Loop over any remaining field instances attached to the edgemakers_topic
  // content type (such as the body field) and delete them individually.
  $instances = field_info_instances('node', 'edgemakers_topic');
  foreach ($instances as $instance_name => $instance) {
    field_delete_instance($instance);
  }
  // Loop over each of the fields defined by this module and delete
  // all instances of the field, their data, and the field itself.
  foreach (array_keys(edgemakers_topic_field_default_field_bases()) as $field) {
    field_delete_field($field);
  }
  // Delete our content type
  node_type_delete('edgemakers_topic');
  // Purge all field info
  field_purge_batch(1000);
}
function edgemakers_topic_get_vocabulary_by_name($vocabulary_name) {
  $vocabs = taxonomy_get_vocabularies();
  foreach ($vocabs as $vocab_object) {
    if ($vocab_object->name == $vocabulary_name) {
      return $vocab_object;
    }
  }
  return false;
}
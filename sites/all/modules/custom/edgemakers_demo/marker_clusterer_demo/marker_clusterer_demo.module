<?php
/**
 * @file Gmap marker clusterer demo.
 */

/**
 * Implements hook_init().
 */
function marker_clusterer_demo_init () {
  //drupal_add_css(drupal_get_path("module", "tt")."/tt.css");
}

/**
 * Implements hook_menu().
 */
function marker_clusterer_demo_menu() {

  $items = array();

  // Module settings.
  $items['admin/config/system/ftesettings/demo'] = array(
    'title' => 'GMap marker content',
    'description' => 'Choice content type for marker clusterer display, if null, display all node in gmap.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('marker_clusterer_demo_settings'),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'marker_clusterer_demo') ,
  );

  // Module settings.
  $items['edgemakers/demo/marker_clusterer'] = array(
    'title' => 'Gmap marker clusterer demo',
    'description' => 'Markers clusterer demo in edgemakers.',
    'page callback' => 'marker_clusterer_demo_example',
    'access callback' => 'user_access',
    'access arguments' => array('node access'),
  );

  return $items;

}

/**
 * Example.
 */
function marker_clusterer_demo_example() {

  // Add label for marker.
  // drupal_add_js(drupal_get_path('module', 'marker_clusterer_demo') . '/js/label.js');

  $output = 'marker_clusterer_demo_example';

  // Load gmap tools.
  module_load_include('inc', 'marker_clusterer_demo');

  $type = variable_get('marker_clusterer_demo_settings_content_type', '');

  if ($type) {
    $nodes = node_load_multiple(array(), array('type' => $type));
  }
  else {
    $nodes = node_load_multiple(array(), array('status' => 1));
  }

  $markers = array();

  foreach ($nodes as $node) {
    //dpm($node);
    if (isset($node->location['lid'])) {
      $marker_array[$node->location['city']]['latitude'] = $node->location['latitude'];
      $marker_array[$node->location['city']]['longitude'] = $node->location['longitude'];
      $marker_array[$node->location['city']]['title'] = $node->title;
      if (isset($marker_array[$node->location['city']]['totalc'])) {
        $marker_array[$node->location['city']]['content'] .= '<li>' . l($node->title, 'node/' . $node->nid) . '</li>';
        $marker_array[$node->location['city']]['totalc'] = (int) $marker_array[$node->location['city']]['totalc'] + 1;
      }
      else {
        $marker_array[$node->location['city']]['content'] = '<ul><li>' . l($node->title, 'node/' . $node->nid) . '</li>';
        $marker_array[$node->location['city']]['totalc'] = 1;
      }

    }
  }

  //dpm($marker_array);

  $i = 1;

  foreach ($marker_array AS $city=>$maker) {

    $icon = 'http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerclusterer/images/m' . $i . '.png';
    //$i++;
    //dpm($icon);

    $markers[] = gmap3_tools_create_marker(
      $maker['latitude'],
      $maker['longitude'],
      $city,
      "{$maker['content']}",
      array(
        'animation' => 'BOUNCE',
        'icon' => url($icon),
      ),
      $maker['totalc']
    );
  }

  //dpm($markers);

  gmap3_tools_add_map(array(
    'mapId' => 'map-canvas-02',
    'mapOptions' => array(
      //'centerX' => $api_data['lat'] + 2,
      //'centerY' => $api_data['lon'] + 0.2,
      'zoom' => 3,
    ),
    'markers' => $markers,
    'gmap3ToolsOptions' => array(
      'defaultMarkersPosition' => GMAP3_TOOLS_DEFAULT_MARKERS_POSITION_CENTER,
    ),
  ));
  $output .= t('Map example 02 with custom markers:') . '<div id="map-canvas-02" style="width:1024; height:400px"></div>';

  return $output;

}

/**
 * Implements hook_foo().
 *
 * Displays help and module information.
 */
function marker_clusterer_demo_help($path, $arg) {
  switch ($path) {
    case "admin/help#marker_clusterer_demo":
      $help_test = '<p>' . t("Gmap marker clusterere demo.") . '</p>';

      return $help_test;

      break;
  }
}

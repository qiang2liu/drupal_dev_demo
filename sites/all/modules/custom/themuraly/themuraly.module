<?php

function themuraly_menu() {

  $items['mural/create'] = array(
    'page callback' => 'muralcreate',
    'access callback' => 'user_is_logged_in',
    'type' => MENU_CALLBACK,
    'file' => 'mural_op.inc',
  );
  $items['mural/share/%'] = array(
    'page callback' => 'muralshow_share',
    'page arguments' => array(2),
    'access callback' => 'user_is_logged_in',
    'type' => MENU_CALLBACK,
    'file' => 'mural_op.inc',
    
    
  );
  $items['mural/create/%'] = array(
    'page callback' => 'muralcreate',
    'page arguments' => array(2),
    'access callback' => 'user_is_logged_in',
    'type' => MENU_CALLBACK,
    'file' => 'mural_op.inc',
  );
  $items['mural/%'] = array(
    'page callback' => 'muralshow',
    'page arguments' => array(1),
    'access callback' => 'user_is_logged_in',
    'type' => MENU_CALLBACK,
    'file' => 'mural_op.inc',
  );
  $items['mural/usersearch/autocomplete'] = array(
    'page callback' => '_mural_usersearch_autocomplete',
    'access callback' => 'user_is_logged_in',
    'type' => MENU_CALLBACK,
    'file' => 'mural_op.inc',
  );
  $items['muraltest'] = array(
    'page callback' => 'muralapi_test',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['mural/ajax_link_callback'] = array();
  return $items;
}

function themuraly_theme($existing, $type) {
  return array(
    'muralypage' => array(
      'variables' => array('data' => NULL),
      'template' => 'templates/muralypage',
    ),
  );
}

function themuraly_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'murals_node_form') {

    form_load_include($form_state, 'inc', 'node', 'node.pages');
    $the_nid = $form['nid']['#value'];
    unset($form['field_muralid']);
    unset($form['field_muraluser']);

    if ($the_nid) {  //edit form
      unset($form['actions']['delete']);
      $form['mural_member_search'] = array(
        '#type' => 'textfield',
        '#title' => t('user'),
        '#maxlength' => 255,
        '#required' => FALSE,
        '#autocomplete_path' => 'mural/usersearch/autocomplete',
      );

      $form['mural_addmember_ajax_link'] = array(
        '#type' => 'button',
        '#value' => t('invite'),
        // Note the /nojs portion of the href - if javascript is enabled,
        // this part will be stripped from the path before it is called.

        '#id' => 'ajax_link',
        '#ajax' => array(
          'wrapper' => 'mural_member_list',
          'callback' => 'mural_addmember_ajax_callback',
          'method' => 'html',
        ),
        '#prefix' => '<div class="mural_member_area">',
      );
      array_unshift($form['#validate'], '_themuralyajax_validate');
      array_unshift($form['#submit'], '_themuralyajax_submit');

      $form['mural_member_area'] = array(
        '#markup' => '<div id="mural_member_list"> ' . _mural_member_list($the_nid) . ' </div>',
        '#suffix' => '</div>',
      );
    }
  }
}

function _mural_member_list($the_nid, $para_muralid = '') {

  global $user;
  $ret = array();
  if ($para_muralid == '') {
    // get muralid
    $the_mural = node_load($the_nid);
    if (isset($the_mural->nid)) {
      $muralid_obj = field_get_items('node', $the_mural, 'field_muralid');
      if (!empty($muralid_obj[0]['value'])) {
        $the_muralid = $muralid_obj[0]['value'];
      }
    }
  } else {
    $the_muralid = $para_muralid;
  }

  if (!empty($the_muralid)) {
    if ($user->uid > 0) {
      $account = user_load($user->uid);
      if (!empty($account->field_muralusername)) {
        $fieldinfo = field_get_items('user', $account, 'field_muralusername');
        if ($fieldinfo) {
          $muralusername = $fieldinfo[0]['value'];

          if (!empty($muralusername)) {
            //call api , get member 
            $mural_api = new Muralapi;
            $mural_api_result = $mural_api->retrieve_a_mural($muralusername, $the_muralid);
            if (is_object($mural_api_result) && isset($mural_api_result->data)) {
              $muralapi_response_obj = drupal_json_decode($mural_api_result->data);
              if (!empty($muralapi_response_obj['members']) && is_array($muralapi_response_obj['members'])) {
                $the_muralusers = array_keys($muralapi_response_obj['members']);
              }

              if (!empty($the_muralusers)) {
                // get user's picture
                $query = new EntityFieldQuery();
                $query->entityCondition('entity_type', 'user')
                        ->entityCondition('bundle', 'user')
                        ->fieldCondition('field_muralusername', 'value', $the_muralusers, 'in');
                $results = $query->execute();

                if (!empty($results) && !empty($results['user'])) {
                  $the_uids = array_keys($results['user']);
                  if (!empty($the_uids)) {
                    $users_array = user_load_multiple($the_uids);

                    $avatarUris = explode('/', variable_get('user_picture_default', ''));
                    $avatarUri_default = file_build_uri(array_pop($avatarUris));
                    foreach ($users_array as $k => $u) {
                      if ($u->picture) {

                        $avatarUri = $u->picture->uri;
                      } else {
                        $avatarUri = $avatarUri_default;
                      }
                      $userpic = theme('image_style', array('style_name' => 'edgemakers_avatar', 'path' => $avatarUri, 'alt' => $u->name, 'title' => $u->name,));
                      if (user_access('access user profiles')) {
                        //$userpic = l($userpic, 'user/' . $u->uid, array('html' => TRUE));
                      }
                      $ret[]['data'] = $userpic;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }


  $ret = theme_item_list(array('items' => $ret, 'attributes' => array(), 'type' => 'ul',));

  return $ret;
}

function _themuralyajax_validate($form, &$form_state) {
  global $user;
  form_load_include($form_state, 'inc', 'node', 'node.pages');

  if ($form_state['triggering_element']['#type'] == 'submit') {
    //dpm($form_state);
   // dpm($form);
    //dd($form_state, '11111');
   // dd($form, '22222');


    $property_array = array();

    $title = check_plain($form_state['values']['title']);
    if (empty($title)) {
      return;
    }
    $property_array['title'] = $title;
    $lang = $form_state['values']['language'];
    $muralshared = $form_state['values']['field_muralshared'][$lang][0]['value'];
    $property_array['shared'] = (bool) $muralshared;

    // invoked by submit button, not ajax button :'invite'
    $the_nid = $form_state['values']['nid'];
    // get muralid
    $the_muralid = '';
    $the_mural = node_load($the_nid);
    if (isset($the_mural->nid)) {
      $muralid_obj = field_get_items('node', $the_mural, 'field_muralid');
      if (!empty($muralid_obj[0]['value'])) {
        $the_muralid = $muralid_obj[0]['value'];
      }
    }
    if (!empty($the_muralid)) {
      if ($user->uid > 0) {
        $account = user_load($user->uid);
        if (!empty($account->field_muralusername)) {
          $fieldinfo = field_get_items('user', $account, 'field_muralusername');
          if ($fieldinfo) {
            $muralusername = $fieldinfo[0]['value'];

            if (!empty($muralusername)) {
              
              
              foreach ($property_array as $k => $v) {
                $mural_api = new Muralapi;
                $property_name = $k;
                $property_value = $v;
                $result = $mural_api->update_mural_properties($muralusername, $the_muralid, $property_name, $property_value);
               
                if (is_object($result) && isset($result->data)) {
                  $data = $result->data;
                   
                  if (!is_string($data) || strtoupper($data) != 'OK') {
                    $the_form_ele = $k;
                    if ($k == 'shared') {
                      $the_form_ele = 'field_muralshared';
                    }
                    form_set_error($the_form_ele, t('can\'t update the mural properties.'));
                    
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

function _themuralyajax_submit($form, &$form_state) {
  form_load_include($form_state, 'inc', 'node', 'node.pages');
}

function mural_addmember_ajax_callback($form, $form_state) {
  global $user;
  $the_nid = $form_state['values']['nid'];
  $the_muralid = '';
  $the_mural = node_load($the_nid);
  if (isset($the_mural->nid)) {
    $muralid_obj = field_get_items('node', $the_mural, 'field_muralid');
    if (!empty($muralid_obj[0]['value'])) {
      $the_muralid = $muralid_obj[0]['value'];
    }
  }
  if (!empty($the_muralid)) {

    $member_username = $form_state['values']['mural_member_search'];
    $muraluser_invite = check_plain($member_username);

    if ($user->uid > 0 && !empty($muraluser_invite)) {
      $account = user_load($user->uid);
      if (!empty($account->field_muralusername)) {
        $fieldinfo = field_get_items('user', $account, 'field_muralusername');
        if ($fieldinfo) {
          $muralusername = $fieldinfo[0]['value'];

          if (!empty($muralusername)) {
            $mural_api = new Muralapi;
            $result = $mural_api->invite_user_mural($muralusername, $the_muralid, array($muraluser_invite));
          }
        }

        /////////////////////////
      }
    }
  }

  return _mural_member_list($the_nid, $the_muralid);
}

function muralapi_create_room($mural_api, $muralusername, $title, $account) {
  $mural_api_result = $mural_api->create_room($muralusername, $title);
  if (is_object($mural_api_result) && isset($mural_api_result->data)) {
    $muralapi_response_obj = drupal_json_decode($mural_api_result->data);
    if (!empty($muralapi_response_obj['id'])) {
      $edit['field_muralroomid'][LANGUAGE_NONE][0]['value'] = $muralapi_response_obj['id'];
      user_save($account, $edit);
      return $muralapi_response_obj['id'];
    }
  }
  return '';
}

function muralapi_test() {
  ini_set('display_errors','on');
  _test_mural_list_for_a_user();
  //_test_user_add();
  //_test_create_room();
  // _test_mural_create_mural();
  //_test_mural_duplicate_mural();
  //_test_mural_update_property_mural();
  //_test_mural_archive();
  //_test_mural_del();
  //_test_mural_list_for_a_user();
  // _test_mural_invite_member();
  _test_retrieve_a_mural();
  // $output_html = "<iframe frameborder='0' src='http://staging.mural.ly/embed/edgemakers/edgemakers/1374110398829' width=500px height=500px'></iframe>";
  $output_html = "<iframe frameborder='0' src='http://staging.mural.ly/embed/edgemakers/edgemakers/1374641493558' width=500px height=500px'></iframe>";

  
  return $output_html;
}

function _test_mural_invite_member() {
  $username = 'kk2t';
  $muralid = '1375063051875';
  $muraluserids = array('kikora');
  $mural_api = new Muralapi;
  $result = $mural_api->invite_user_mural($username, $muralid, $muraluserids);
  dpm($result);
  $data = $result->data;
  $r = drupal_json_decode($data);
  dpm($r);
}

function _test_mural_del() {
  $mural_api = new Muralapi;
  $username = "testuser";
  $muralid = "1374197201377";
  $result = $mural_api->delete_mural($username, $muralid);
  $data = $result->data;  //it is a string
  //$r = drupal_json_decode($data);
  dpm($result);
  dpm($data);
}

function _test_create_room() {
  $mural_api = new Muralapi;
  $username = "testuser";
  $title = 'mymuralroom';
  $result = $mural_api->create_room($username, $title);
  $data = $result->data;
  $r = drupal_json_decode($data);
  dpm($result);
  dpm($r);
}

function _test_retrieve_a_mural() {
  $username = 'kk2t';  //owner
 // $username = 'kikora';
  $muralid = '1375231303413';
  $muralid = '1375063051875';
  $muralid = '1375252040839';
  $muralid = '1375252809540';
  $mural_api = new Muralapi;
  $result = $mural_api->retrieve_a_mural($username, $muralid);
  $data = $result->data;
  $r = drupal_json_decode($data);
  dpm($result);
  dpm($r);
}

function _test_mural_archive() {
  $mural_api = new Muralapi;
  $username = "testuser";
  $muralid = "1374197201377";
  $archive_flag = 1;
  $result = $mural_api->archive_mural($username, $muralid, $archive_flag);
  $data = $result->data;
  //$r = drupal_json_decode($data);
  dpm($result);
  dpm($data);
}

function _test_mural_update_property_mural() {
  $mural_api = new Muralapi;

  $username = 'kk2t';
  $muralid = '1375063051875';
  $property_name = "shared";
  $property_value = (bool) 1;
  $result = $mural_api->update_mural_properties($username, $muralid, $property_name, $property_value);
  $data = $result->data;
  $r = drupal_json_decode($data);
  dpm($result);
  dpm($r);
}

function _test_mural_duplicate_mural() {
  $mural_api = new Muralapi;
  $params = array('title' => 'this is a duplicate from a mural', 'room' => 1373060830214,);
  $result = $mural_api->duplicate_mural('testuser', '1373655313624', $params);
  $data = $result->data;
  $r = drupal_json_decode($data);
  dpm($result);
  dpm($r);
}

function _test_mural_create_mural() {
  $mural_api = new Muralapi;
  $str = rand(800, 10000);
  $params = array('title' => $str . ' this is a mural', 'room' => 1373060830214,);
  $result = $mural_api->create_mural('testuser', $params);
  $data = $result->data;
  $r = drupal_json_decode($data);
  dpm($result);
  dpm($r);
}

function _test_mural_list_for_a_user() {
  $mural_api = new Muralapi;
  $result = $mural_api->get_all_murals('kk2t');
  $data = $result->data;
  $r = drupal_json_decode($data);
  dpm($result);
  dpm($r);
}

function _test_user_add() {

  $mural_api = new Muralapi;
  $str = rand(800, 10000);
  $user = array();
  $user['username'] = "cldf" . $str;
  // $user['username'] = "ppt777";
  $user['email'] = "cldf" . $str . "@symbio.com";
  $user['source'] = "edgemakers";
  $user['nameIdentifier'] = 3;

  $mural_api_result = $mural_api->create_user($user, '/api/organizations/edgemakers/users', 'POST');
  dpm($mural_api_result);
  //dd($mural_api_result);
  $muralapi_response_obj = drupal_json_decode($mural_api_result->data);
  dpm($muralapi_response_obj);

  if (isset($muralapi_response_obj['hasErrors'])) {
    if (!$muralapi_response_obj['hasErrors']) {
      // successful, then 
      $edit = array();
      // the $muralapi_response_obj will contain the user attribute ($muralapi_response_obj->user)
      // but now ,it has no this attribute, so , just reguard the $account->name as the  mural username
      $the_mural_username = "";
      if (isset($muralapi_response_obj['user'])) {
        if (isset($muralapi_response_obj['user']['username'])) {
          $the_mural_username = $muralapi_response_obj['user']['username'];
        }
      }


      $edit['field_muralusername'][LANGUAGE_NONE][0]['value'] = $the_mural_username;
      // user_save($account, $edit);
      dpm($edit);
    }
  }
}

<?php
require_once 'edgemakers_box.inc';
/**
 * Implements hook_menu().
 */
function edgemakers_box_menu() {
  $items['admin/edgemakers'] = array(
    'title' => 'Edgemakers',
    'page callback' => 'edgemakers_box_admin_page',
    'access arguments' => array('Edgemakers Management'),
  );
  $items['admin/edgemakers/box'] = array(
    'title' => 'Manage Box',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('edgemakers_box_admin_list_form'),
    'access arguments' => array('Edgemakers Management'),
  );
  $items['admin/edgemakers/box/list'] = array(
    'title' => 'Manage Box',
    'access arguments' => array('Edgemakers Management'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 1,
  );
  $items['admin/edgemakers/box/create'] = array(
    'title' => 'Create Box',
    'page callback' => 'edgemakers_box_admin_create_page',
    'access arguments' => array('Edgemakers Management'),
    'file path' => drupal_get_path('module', 'node'),
    'file' => 'node.pages.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 0,
  );
  $items['admin/edgemakers/box/ajaxdelete/%'] = array(
    'title' => 'Delete Box',
    'page callback' => 'edgemakers_box_admin_delete_action',
    'page arguments' => array(4),
    'access arguments' => array('Edgemakers Management'),
    'file path' => drupal_get_path('module', 'node'),
    'file' => 'node.pages.inc',
  );
  return $items;
}
/**
 * Implements hook_form_alter().
 *
}*/
function edgemakers_box_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'edgemakers_box_node_form') {
    if(arg(0) == 'admin' && arg(1) == 'edgemakers' || arg(0) == 'modal') {
      $form['actions']['submit']['#submit'][] = 'edgemakers_box_node_submit_redirect_handler';
      $node = $form_state['node'];
      if (!isset($node->nid)) {
        //is node/add
        unset($form['actions']['preview']);
      } else {
        //is node/edit
        form_load_include($form_state, 'inc', 'node', 'node.pages');
        $form['field_box_type']['#disabled'] = TRUE;
        unset($form['actions']['preview'], $form['actions']['delete']);
      }
    }
    $langcode = isset($form['#language']) ? $form['#language'] : 'und';
    $form['field_box_type'][$langcode]['#after_build'] = array('_edgemakers_box_load_my_javascript');
  }
}
/**
 * Implements hook_node_validate().
 *
 */
function edgemakers_box_node_validate($node, $form, &$form_state) {
  $terms = _edgemakers_box_get_terms();
  $types = field_get_items('node', $node, 'field_box_type');
  $type = $types && count($types) > 0 ? $terms[$types[0]['tid']] : '';
  
  if($type != 'Project' && $type != 'Activity') {
    $urls = field_get_items('node', $node, 'field_box_url');
    $url = $urls && count($urls) > 0 ? $urls[0]['url'] : '';
    if($url == '') {
      form_set_error('field_box_url', t('Please fill in the URL'));
    }
  }
  if($type == 'Activity') {
    $bodys = field_get_items('node', $node, 'body');
    $body = $bodys && count($bodys) > 0 ? $bodys[0]['value'] : '';
    if($body == '') {
      form_set_error('body', t('Please fill in the Display text'));
    }
  }
  if($type == 'Learn Module') {
    $images = field_get_items('node', $node, 'field_box_image');
    $image = $images && count($images) > 0 ? (isset($images[0]['width']) ? $images[0]['width'] : '') : '';
    if($image == '') {
      form_set_error('field_box_image', t('Please upload the Proxy Image'));
    }
  }
}